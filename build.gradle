plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

    implementation "io.awspring.cloud:spring-cloud-aws-starter:$springCloudAws"
    implementation "io.awspring.cloud:spring-cloud-aws-sqs:$springCloudAws"
    implementation "io.awspring.cloud:spring-cloud-aws-messaging:$springCloudAwsMessaging"
    implementation "software.amazon.awssdk:aws-sdk-java:$awsSdkVersion"
    implementation "software.amazon.awssdk:sqs:$awsSdkVersion"

//    implementation "org.flywaydb:flyway-core"
    implementation("org.flywaydb:flyway-database-postgresql")
    implementation "io.r2dbc:r2dbc-postgresql:$r2dbcVersion"
    implementation "org.postgresql:postgresql:$postgresVersion"

    implementation "org.mapstruct:mapstruct:$mapstructVersion"


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
